# 1. 표지

# 2. 목차

# 3. 문제인식과 아이디어의 출발
■ 문제인식
  ● 
  ● 
■ 아이디어의 출발
  ● 
  ● 

# 4. 앱 개요
■ 코딩 언어와 라이브러리
  ● 
  ● 
■ 앱의 작동 원리
  ● 이렇게 데이터를 가지고 와서
  ● 이렇게 프론트엔드와 연결하고
  ● 이렇게 사용자들에게 보여준다
5, 6 -> 4 -> 7 -> 3
# 5. 프론트엔드 (Front-end)
■ UI/UX, 디자인, 프레임워크
  (이미지)
  ● 어떤 UI를 활용했는가?
  ● UX를 발전시키기 위해 어떤 노력을 했는가?
  (이미지)
  ● 어떻게 사이트를 디자인 했는가?
  ● 어떤 라이브러리/프레임워크를 활용했는가?

# 6. 백엔드
■ 데이터 패칭 (Data Fetching)
  ● 어떤 프로그래밍 언어, 프레임워크, 라이브러리, 모듈 기반인가?
  ● 어떤 엔진을 기반으로 했는가 (Node.js, Deno 등) 
  ● 어떤 형식으로 데이터를 가지고 왔는가 (Web Scraping, API, Existing File, Database Query 등)
  ● 어떻게 호스팅을 했는가 (Web hosting - node.js, web hosting - python 등)
  ● 어떤 서비스 호스트를 활용했는가 (cyclic, firebase, render 등)

# 6. 백엔드 (계속)
■ 데이터 베이스 (Database)
  ● 어떤 데이터베이스 프로바이더를 활용했는가 (firebase, supabase 등)
  ● 어떤 형식의 데이터베이스를 활용했는가 (firebase realtime database, firestore)

////////////////////////////////////////////////////////////////////////////////////
# 7. 기타
■ 8.1 에널리틱스 
  ● 어떻게 사용자를 분석할 것인가?
  ● 어떤 서비스를 활용해 사용자를 분석할 것인가?
  ● 분석한 사용자를 가지고 어떻게 앱을 발전할 것인가
  ● 기타로 사이트 성능, 서치 엔진 비율 등 분석할 것이 있는가?
### 8.2 버전 컨트롤
  - 어떤 방식으로 앱 수정 사항을 것을 기록하고 있는가?
  - 만일 앱 만드는 팀에 더 많은 사람이 들어온다면 어떻게 모든 사람들이 참여할 수 있게 앱 개발을 하겠는가?
### 8.3 다른 분야
  - 어떻게 웹사이트를 만들면 모바일, 컴퓨터, 워치, 패드 개발 쪽으로 사용자를 늘리겠는가?
  - 어떻게 앱을 만들면 웹사이트 쪽으로 사용자를 늘리겠는가?
### 8.4 테스팅
#### 8.4.1 기술적인 테스팅
  - 어떤 방식으로 테스팅을 하겠는가?
  - 앱을 출시했을 떄 어떻게, 누구에게 베타 버전을 테스트하겠는가?
#### 8.4.2 사용자 테스팅
  - 앱을 공식적으로 모두에게 출시하기 전에 일부 베타 테스터에게 테스팅을 할 것인가?
////////////////////////////////////////////////////////////////////////////////////

# 7. 보완할 사항
■ 아이디어 측면
  ● (지진만 -> 지진 외에도 다양한 자연 재난 아이템을 넣을 필요)
  ● (사회적 재난 향후에 구현할 수 있다)
■ 기술적 측면
  ● ... 기능은 구현되지 못한 한계가 있음
  ● ... 부분은 효율성을 제고할 여지가 있음
